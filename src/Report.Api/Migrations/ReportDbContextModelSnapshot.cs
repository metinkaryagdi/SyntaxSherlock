// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Report.Api.Data;

#nullable disable

namespace Report.Api.Migrations
{
    [DbContext(typeof(ReportDbContext))]
    partial class ReportDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Report.Api.Models.LintingIssue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Column")
                        .HasColumnType("integer");

                    b.Property<int>("Line")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("MetricId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ReportMetricId")
                        .HasColumnType("uuid");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("SubmissionId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("ReportMetricId");

                    b.HasIndex("SubmissionId");

                    b.ToTable("LintingIssues");
                });

            modelBuilder.Entity("Report.Api.Models.ReportMetric", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CalculatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CodeQualityScore")
                        .HasColumnType("integer");

                    b.Property<int>("ErrorCount")
                        .HasColumnType("integer");

                    b.Property<int>("FileCount")
                        .HasColumnType("integer");

                    b.Property<int>("InfoCount")
                        .HasColumnType("integer");

                    b.Property<int>("IssueCount")
                        .HasColumnType("integer");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SubmissionId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int>("WarningCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId")
                        .IsUnique();

                    b.ToTable("ReportMetrics");
                });

            modelBuilder.Entity("Report.Api.Models.LintingIssue", b =>
                {
                    b.HasOne("Report.Api.Models.ReportMetric", null)
                        .WithMany("Issues")
                        .HasForeignKey("ReportMetricId");

                    b.HasOne("Report.Api.Models.ReportMetric", "Metric")
                        .WithMany()
                        .HasForeignKey("SubmissionId")
                        .HasPrincipalKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Metric");
                });

            modelBuilder.Entity("Report.Api.Models.ReportMetric", b =>
                {
                    b.Navigation("Issues");
                });
#pragma warning restore 612, 618
        }
    }
}
